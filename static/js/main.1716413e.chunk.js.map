{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["WordSearch","handleOnChange","event","setState","word","target","value","getSearchWord","getApi","state","wordInput","wordUrl","fetch","then","response","json","jsonData","console","log","hits","queris","bind","className","type","name","placeholder","onChange","onInput","this","filter","items","title","toLowerCase","includes","map","item","index","url","author","relevancy_score","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,YCIMA,E,kDACpB,aAAc,IAAD,8BACZ,gBAUDC,eAAiB,SAAAC,GAChB,EAAKC,SAAS,CAACC,KAAMF,EAAMG,OAAOC,SAZtB,EAcbC,cAAgB,WACf,EAAKC,OAAO,EAAKC,MAAML,OAfX,EAiBbI,OAAS,SAAAE,GACR,IAAIC,EAAO,oDAAgDD,EAAhD,eACXE,MAAMD,GACJE,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACLC,QAAQC,IAAIF,EAASG,MACrB,EAAKhB,SAAS,CAACiB,OAAQJ,EAASG,WAvBlC,EAAKV,MAAQ,CACZL,KAAM,GACNgB,OAAQ,IAET,EAAKnB,eAAiB,EAAKA,eAAeoB,KAApB,gBACtB,EAAKd,cAAgB,EAAKA,cAAcc,KAAnB,gBACrB,EAAKb,OAAS,EAAKA,OAAOa,KAAZ,gBARF,E,0CA6Bb,WAAS,IAAD,OAEP,OACC,sBAAKC,UAAU,OAAf,UACC,qBAAKA,UAAU,SAAf,SAAwB,sBAAKA,UAAU,MAAf,UACvB,kDACA,8BAAK,uBAAOC,KAAK,OAAOC,KAAK,SAASC,YAAY,oBAAoBC,SAAU,SAAAxB,GAAK,OAAI,EAAKD,eAAeC,IAAQyB,QAASC,KAAKrB,cAAeD,MAAOsB,KAAKnB,MAAML,cAGrK,sBAAKkB,UAAU,WAAf,UACC,sBAAMA,UAAU,QAAhB,SAAwB,kDAEvBM,KAAKnB,MAAMW,OACX,8BAECQ,KAAKnB,MAAMW,OAAOS,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcC,SAAS,EAAKxB,MAAML,SAAO8B,KAAI,SAACC,EAAKC,GAAN,OAC3F,gCACC,sBAAMd,UAAU,eAAhB,SAA+B,6BAAKa,EAAKJ,UACzC,sBAAMT,UAAU,aAAhB,SAA6B,uCAAS,4BAAIa,EAAKE,IAAMF,EAAKE,IAAM,wBAChE,sBAAMf,UAAU,SAAhB,SAAyB,0CAAY,4BAAIa,EAAKG,OAASH,EAAKG,OAAS,wBACrE,sBAAMhB,UAAU,QAAhB,SAAwB,iDAAmB,4BAAIa,EAAKI,gBAAkBJ,EAAKI,gBAAkB,WAC7F,yBALSH,QAUX,4D,GAxDkCI,aCQzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1716413e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nexport default class WordSearch extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tword: \"\",\n\t\t\tqueris: []\n\t\t}\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.getSearchWord = this.getSearchWord.bind(this);\n\t\tthis.getApi = this.getApi.bind(this);\n\t}\n\t\n\thandleOnChange = event => {\n\t\tthis.setState({word: event.target.value});\n\t}\n\tgetSearchWord = () => {\n\t\tthis.getApi(this.state.word);\n\t}\n\tgetApi = wordInput => {\n\t\tvar wordUrl = `http://hn.algolia.com/api/v1/search?query=${wordInput}&tags=story`;\n\t\tfetch(wordUrl)\n\t\t\t.then(response => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(jsonData => {\n\t\t\t\tconsole.log(jsonData.hits);\n\t\t\t\tthis.setState({queris: jsonData.hits});\n\t\t\t})\n\t}\n\t\n\trender(){\n\t\t\n\t\treturn(\n\t\t\t<div className=\"Main\">\n\t\t\t\t<div className=\"Appdiv\"><div className=\"App\">\n\t\t\t\t\t<h2>Speedwapp Search</h2>\n\t\t\t\t\t<div><input type=\"text\" name=\"search\" placeholder=\"Enter search word\" onChange={event => this.handleOnChange(event)} onInput={this.getSearchWord} value={this.state.word} /></div>\n\t\t\t\t\t\n\t\t\t\t</div></div>\n\t\t\t\t<div className=\"Displays\">\n\t\t\t\t\t<span className=\"Spana\"><h2>Search Results</h2></span>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.queris ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.queris.filter(items => items.title.toLowerCase().includes(this.state.word)).map((item,index) => (\n\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t<span className=\"articleTitle\"><h3>{item.title}</h3></span>\n\t\t\t\t\t\t\t\t<span className=\"articleUrl\"><h4>Url: <i>{item.url ? item.url : \"Not Applicable\"}</i></h4></span>\n\t\t\t\t\t\t\t\t<span className=\"author\"><h4>Author: <i>{item.author ? item.author : \"Not Applicable\"}</i></h4></span>\n\t\t\t\t\t\t\t\t<span className=\"score\"><h4>Article score: <i>{item.relevancy_score ? item.relevancy_score : \"0\"}</i></h4></span>\n\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>Attempt a search </p>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Wordsearch from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wordsearch />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}